/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.qlth.frm;

import com.qlth.dao.TacGiaDAO;
import com.qlth.obj.TacGia;
import com.qlth.util.Convert;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.OK_CANCEL_OPTION;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hong Hiep
 */
public class FrmTacGia extends javax.swing.JFrame {

    DefaultTableModel tableModel = new DefaultTableModel();

    /**
     * Creates new form FrmTacGia
     */
    public FrmTacGia() {
        initComponents();
        loadDuLieuLenLuoi();
        dtNamSinh.setIcon(new ImageIcon("src/com/qlth/img/28.png"));
        dtNamMat.setIcon(new ImageIcon("src/com/qlth/img/28.png"));
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTacGia = new javax.swing.JTable();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXoaTrang = new javax.swing.JButton();
        btnResetBang = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtMaTacGia = new javax.swing.JTextField();
        txtTenTacGia = new javax.swing.JTextField();
        dtNamSinh = new com.toedter.calendar.JDateChooser();
        dtNamMat = new com.toedter.calendar.JDateChooser();
        txtQueQuan = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh mục tác giả"));
        jPanel1.setLayout(new java.awt.GridLayout(1, 1));

        tblTacGia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTacGia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTacGiaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTacGia);

        jPanel1.add(jScrollPane1);

        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/26.png"))); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Chức năng"));
        jPanel4.setLayout(new java.awt.GridLayout(5, 1));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/20.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel4.add(btnThem);

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/22.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel4.add(btnSua);

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/24.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel4.add(btnXoa);

        btnXoaTrang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/23.png"))); // NOI18N
        btnXoaTrang.setText("Xóa trắng");
        btnXoaTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTrangActionPerformed(evt);
            }
        });
        jPanel4.add(btnXoaTrang);

        btnResetBang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/27.png"))); // NOI18N
        btnResetBang.setText("Reset Bảng");
        btnResetBang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetBangActionPerformed(evt);
            }
        });
        jPanel4.add(btnResetBang);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin"));

        jPanel2.setLayout(new java.awt.GridLayout(5, 1));

        jLabel1.setText("Mã tác giả");
        jPanel2.add(jLabel1);

        jLabel2.setText("Tên tác giả");
        jPanel2.add(jLabel2);

        jLabel3.setText("Năm sinh");
        jPanel2.add(jLabel3);

        jLabel4.setText("Năm mất");
        jPanel2.add(jLabel4);

        jLabel5.setText("Quê quán");
        jPanel2.add(jLabel5);

        jPanel3.setLayout(new java.awt.GridLayout(5, 1, 5, 5));
        jPanel3.add(txtMaTacGia);
        jPanel3.add(txtTenTacGia);
        jPanel3.add(dtNamSinh);
        jPanel3.add(dtNamMat);
        jPanel3.add(txtQueQuan);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 499, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 399, Short.MAX_VALUE)))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addGap(0, 107, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtTimKiem))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTimKiem)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTimKiem))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        if (txtMaTacGia.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập mã tác giả");
            return;
        }
        if (txtTenTacGia.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập tên tác giả");
            return;
        }

        TacGiaDAO tacGiaDAO = new TacGiaDAO();
        //lấy giá trị nhập trên form truyền vào đôi tượng
        TacGia tg = new TacGia();
        tg.setMaTacGia(Convert.convertID(txtMaTacGia.getText()));
        tg.setTenTacGia(Convert.convertName(txtTenTacGia.getText()));
        tg.setNamSinh(dtNamSinh.getDate());
        tg.setNamMat(dtNamMat.getDate());
        tg.setQueQuan(txtQueQuan.getText());

        //thực hiện thêm vào DB
        boolean result = tacGiaDAO.insert(tg);
        //nếu thành công thì thông báo
        if (result) {
            JOptionPane.showMessageDialog(this, "Thêm sách thành công");
        }
        //reset form
        xoaTrang();
        //load lại dữ liệu lên lưới
        loadDuLieuLenLuoi();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        int row = tblTacGia.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn mục muốn sửa");
            return;
        }
        if (txtMaTacGia.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập mã tác giả");
            return;
        }
        if (txtTenTacGia.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập tên tác giả");
            return;
        }

        TacGiaDAO tacGiaDAO = new TacGiaDAO();
        //lấy giá trị nhập trên form truyền vào đôi tượng
        TacGia ls = new TacGia();
        ls.setMaTacGiaUpdate(Convert.convertID(txtMaTacGia.getText()));
        ls.setTenTacGia(Convert.convertName(txtTenTacGia.getText()));
        ls.setNamSinh(dtNamSinh.getDate());
        ls.setNamMat(dtNamMat.getDate());
        ls.setQueQuan(txtQueQuan.getText());

        ls.setMaTacGia((String) tblTacGia.getValueAt(row, 0));
        //thực hiện thêm vào DB
        boolean result = tacGiaDAO.update(ls);
        //nếu thành công thì thông báo
        if (result) {
            JOptionPane.showMessageDialog(this, "Sửa sách thành công");
        }
        //reset form
        xoaTrang();
        //load lại dữ liệu lên lưới
        loadDuLieuLenLuoi();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int row = tblTacGia.getSelectedRow();
        if (row >= 0) {
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?", "Thông báo", OK_CANCEL_OPTION);
            //Nếu chọn Yes
            if (confirm == JOptionPane.YES_OPTION) {
                //Lấy dòng được chọn

                //Lấy giá trị dòng được lấy cột đầu tiên => mã nhân viên
                String maTacGia = (String) tblTacGia.getValueAt(row, 0);
                TacGiaDAO tacGiaDAO = new TacGiaDAO();
                TacGia tacGia = new TacGia(maTacGia);
                //thực hiện xóa vai trò
                boolean result = tacGiaDAO.delete(tacGia);
                //thông báo
                if (result) {
                    JOptionPane.showMessageDialog(this, "Xóa sách thành công!");
                }
                //reset lại form nhập
                xoaTrang();
                //load lại dữ liệu lên lưới
                loadDuLieuLenLuoi();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn chựa chọn mục muốn xóa");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnXoaTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTrangActionPerformed
        // TODO add your handling code here:
        xoaTrang();
    }//GEN-LAST:event_btnXoaTrangActionPerformed

    private void btnResetBangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetBangActionPerformed
        // TODO add your handling code here:
        loadDuLieuLenLuoi();
    }//GEN-LAST:event_btnResetBangActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        tableModel = new DefaultTableModel();
        //tạo cột
        tableModel.addColumn("Mã tác giả");
        tableModel.addColumn("Tên tác giả");
        tableModel.addColumn("Năm sinh");
        tableModel.addColumn("Năm mất");
        tableModel.addColumn("Quê quán");

        TacGiaDAO tacGiaDAO = new TacGiaDAO();
        //lấy ra thông tin tìm kiếm
        TacGia tg = new TacGia();
        tg.setMaTacGia(txtTimKiem.getText());
        tg.setTenTacGia(txtTimKiem.getText());

        List<TacGia> tacGiaList = tacGiaDAO.search(tg);
        for (TacGia tacGia : tacGiaList) {
            Vector vector = new Vector();
            vector.add(tacGia.getMaTacGia());
            vector.add(tacGia.getTenTacGia());
            vector.add(tacGia.getNamSinh() != null ? sdf.format(tacGia.getNamSinh()) : "");
            vector.add(tacGia.getNamMat() != null ? sdf.format(tacGia.getNamMat()) : "");
            vector.add(tacGia.getQueQuan());

            //tạo hàng
            tableModel.addRow(vector);
        }
        //đưa dữ liệu từ model vào bảng
        tblTacGia.setModel(tableModel);
        tblTacGia.getColumnModel().getColumn(1).setPreferredWidth(200);
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void tblTacGiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTacGiaMouseClicked
        try {
            // TODO add your handling code here:
            int row = tblTacGia.getSelectedRow();
            //lấy giá trị trên dòng được chọn cột thứ 0
            String maTacGia = (String) tblTacGia.getValueAt(row, 0);
            //lấy giá trị trên dòng được chọn cột thứ 1
            String tenTacGia = (String) tblTacGia.getValueAt(row, 1);
            //lấy giá trị trên dòng được chọn cột thứ 2
            String namSinh = (String) tblTacGia.getValueAt(row, 2);
            //lấy giá trị trên dòng được chọn cột thứ 2
            String namMat = (String) tblTacGia.getValueAt(row, 3);
            //lấy giá trị trên dòng được chọn cột thứ 2
            String queQuan = (String) tblTacGia.getValueAt(row, 4);
            //lấy giá trị trên dòng được chọn cột thứ 2
            

            txtMaTacGia.setText(maTacGia);
            txtTenTacGia.setText(tenTacGia);
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            dtNamSinh.setDate(namSinh.isEmpty() ? null : sdf.parse(namSinh));
            dtNamMat.setDate(namMat.isEmpty() ? null : sdf.parse(namMat));
            txtQueQuan.setText(queQuan);
        } catch (ParseException ex) {
            Logger.getLogger(FrmTacGia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblTacGiaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmTacGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmTacGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmTacGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmTacGia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmTacGia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnResetBang;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaTrang;
    private com.toedter.calendar.JDateChooser dtNamMat;
    private com.toedter.calendar.JDateChooser dtNamSinh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTacGia;
    private javax.swing.JTextField txtMaTacGia;
    private javax.swing.JTextField txtQueQuan;
    private javax.swing.JTextField txtTenTacGia;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void xoaTrang() {
        txtMaTacGia.setText("");
        txtTenTacGia.setText("");
        txtQueQuan.setText("");
        txtTimKiem.setText("");
        dtNamSinh.setDate(null);
        dtNamMat.setDate(null);
    }

    private void loadDuLieuLenLuoi() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        //khởi tạo lại model, xóa hết cột cũ dòng cũ đi
        tableModel = new DefaultTableModel();
        //tạo cột
        tableModel.addColumn("Mã tác giả");
        tableModel.addColumn("Tên tác giả");
        tableModel.addColumn("Năm sinh");
        tableModel.addColumn("Năm mất");
        tableModel.addColumn("Quê quán");

        TacGiaDAO tacGiaDAO = new TacGiaDAO();
        //lấy ra toàn bộ vai trò
        List<TacGia> tacGiaList = tacGiaDAO.selectAll();
        for (TacGia tacGia : tacGiaList) {
            Vector vector = new Vector();
            vector.add(tacGia.getMaTacGia());
            vector.add(tacGia.getTenTacGia());
            vector.add(tacGia.getNamSinh() != null ? sdf.format(tacGia.getNamSinh()) : "");
            vector.add(tacGia.getNamMat() != null ? sdf.format(tacGia.getNamMat()) : "");
            vector.add(tacGia.getQueQuan());

            //tạo hàng
            tableModel.addRow(vector);
        }
        //đưa dữ liệu từ model vào bảng
        tblTacGia.setModel(tableModel);
        tblTacGia.getColumnModel().getColumn(1).setPreferredWidth(200);
    }
}
