/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.qlth.frm;

import com.qlth.dao.QuyenDAO;
import com.qlth.dao.TaiKhoanDAO;
import com.qlth.dao.TaiKhoanDAO;
import com.qlth.obj.Quyen;
import com.qlth.obj.TaiKhoan;
import com.qlth.obj.TaiKhoan;
import com.qlth.obj.TaiKhoanUpdate;
import com.qlth.util.Convert;
import com.qlth.util.PasswordCellRenderer;
import java.awt.Component;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.OK_CANCEL_OPTION;
import javax.swing.JPasswordField;
import javax.swing.ListCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hong Hiep
 */
public class FrmAccountManager extends javax.swing.JFrame {

    DefaultTableModel tableModel = new DefaultTableModel();

    /**
     * Creates new form FrmAccountManager
     */
    public FrmAccountManager() {
        initComponents();
        loadDuLieuLenLuoi();
        loadDuLieuLenCombobox();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTaiKhoan = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        txtHoVaTen = new javax.swing.JTextField();
        cbbQuyen = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXoaTrang = new javax.swing.JButton();
        btnResetBang = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh mục tài khoản"));
        jPanel1.setLayout(new java.awt.GridLayout(1, 1));

        tblTaiKhoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTaiKhoan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTaiKhoanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTaiKhoan);

        jPanel1.add(jScrollPane1);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin"));

        jPanel4.setLayout(new java.awt.GridLayout(4, 1));

        jLabel1.setText("Username");
        jPanel4.add(jLabel1);

        jLabel2.setText("Password");
        jPanel4.add(jLabel2);

        jLabel3.setText("Họ và tên");
        jPanel4.add(jLabel3);

        jLabel4.setText("Quyền");
        jPanel4.add(jLabel4);

        jPanel5.setLayout(new java.awt.GridLayout(4, 1));
        jPanel5.add(txtUsername);
        jPanel5.add(txtPassword);
        jPanel5.add(txtHoVaTen);

        cbbQuyen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel5.add(cbbQuyen);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Chức năng"));
        jPanel3.setLayout(new java.awt.GridLayout(5, 1));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/20.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel3.add(btnThem);

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/22.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel3.add(btnSua);

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/24.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel3.add(btnXoa);

        btnXoaTrang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/23.png"))); // NOI18N
        btnXoaTrang.setText("Xóa trắng");
        btnXoaTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTrangActionPerformed(evt);
            }
        });
        jPanel3.add(btnXoaTrang);

        btnResetBang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/27.png"))); // NOI18N
        btnResetBang.setText("Reset bảng");
        btnResetBang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetBangActionPerformed(evt);
            }
        });
        jPanel3.add(btnResetBang);

        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/26.png"))); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                            .addComponent(txtTimKiem))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int row = tblTaiKhoan.getSelectedRow();
        if (row >= 0) {
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?", "Thông báo", OK_CANCEL_OPTION);
            //Nếu chọn Yes
            if (confirm == JOptionPane.YES_OPTION) {
                //Lấy dòng được chọn

                //Lấy giá trị dòng được lấy cột đầu tiên => mã nhân viên
                String maTaiKhoan = (String) tblTaiKhoan.getValueAt(row, 0);
                TaiKhoanDAO taiKhoanDAO = new TaiKhoanDAO();
                TaiKhoan taiKhoan = new TaiKhoan(maTaiKhoan);
                //thực hiện xóa vai trò
                boolean result = taiKhoanDAO.delete(taiKhoan);
                //thông báo

                //reset lại form nhập
                xoaTrang();
                //load lại dữ liệu lên lưới
                loadDuLieuLenLuoi();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn chựa chọn mục muốn xóa");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (txtUsername.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập username");
            return;
        }
        if (txtPassword.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập password");
            return;
        }
        if (txtHoVaTen.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập họ và tên");
            return;
        }

        TaiKhoanDAO taiKhoanDAO = new TaiKhoanDAO();
        //lấy giá trị nhập trên form truyền vào đôi tượng
        TaiKhoan tk = new TaiKhoan();
        tk.setUsername(Convert.convertID(txtUsername.getText()));
        tk.setPassword(txtPassword.getText());
        tk.setHoVaTen(Convert.convertName(txtHoVaTen.getText()));
        tk.setMaQuyen(((Quyen) cbbQuyen.getSelectedItem()).getMaQuyen());
        //thực hiện thêm vào DB
        boolean result = taiKhoanDAO.insert(tk);
        //nếu thành công thì thông báo

        //reset form
        xoaTrang();
        //load lại dữ liệu lên lưới
        loadDuLieuLenLuoi();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int row = tblTaiKhoan.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn mục muốn sửa");
            return;
        }
        if (txtUsername.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập username");
            return;
        }
        if (txtPassword.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập password");
            return;
        }
        if (txtHoVaTen.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập họ và tên");
            return;
        }

        TaiKhoanDAO taiKhoanDAO = new TaiKhoanDAO();
        //lấy giá trị nhập trên form truyền vào đôi tượng
        TaiKhoanUpdate tku = new TaiKhoanUpdate();
        tku.setUsernameUpdate(Convert.convertID(txtUsername.getText()));
        tku.setPassword(txtPassword.getText());
        tku.setHoVaTen(Convert.convertName(txtHoVaTen.getText()));
        tku.setMaQuyen(((Quyen) cbbQuyen.getSelectedItem()).getMaQuyen());

        tku.setUsername((String) tblTaiKhoan.getValueAt(row, 0));
        //thực hiện thêm vào DB
        boolean result = taiKhoanDAO.update(tku);
        //nếu thành công thì thông báo

        //reset form
        xoaTrang();
        //load lại dữ liệu lên lưới
        loadDuLieuLenLuoi();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTrangActionPerformed
        xoaTrang();
    }//GEN-LAST:event_btnXoaTrangActionPerformed

    private void btnResetBangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetBangActionPerformed
        loadDuLieuLenLuoi();
    }//GEN-LAST:event_btnResetBangActionPerformed

    private void tblTaiKhoanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTaiKhoanMouseClicked
        int row = tblTaiKhoan.getSelectedRow();
        //lấy giá trị trên dòng được chọn cột thứ 0
        String username = (String) tblTaiKhoan.getValueAt(row, 0);
        //lấy giá trị trên dòng được chọn cột thứ 1
        String password = (String) tblTaiKhoan.getValueAt(row, 1);
        //lấy giá trị trên dòng được chọn cột thứ 2
        String hoVaTen = (String) tblTaiKhoan.getValueAt(row, 2);
        //lấy giá trị trên dòng được chọn cột thứ 2
        String maQuyen = (String) tblTaiKhoan.getValueAt(row, 3);
        //lấy giá trị trên dòng được chọn cột thứ 2
        if (maQuyen.equals("1")) {
            btnSua.setEnabled(false);
            btnXoa.setEnabled(false);
            txtPassword.setText("");
        } else {
            btnSua.setEnabled(true);
            btnXoa.setEnabled(true);
            txtPassword.setText(password);
        }
        txtUsername.setText(username);
        txtHoVaTen.setText(hoVaTen);
        QuyenDAO quyenDAO = new QuyenDAO();
        cbbQuyen.setSelectedItem(quyenDAO.getQuyenById(maQuyen));
    }//GEN-LAST:event_tblTaiKhoanMouseClicked

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        tableModel = new DefaultTableModel();
        //tạo cột
        tableModel.addColumn("Username");
        tableModel.addColumn("Password");
        tableModel.addColumn("Họ và tên");
        tableModel.addColumn("Mã quyền");
        
        
        TaiKhoanDAO taiKhoanDAO = new TaiKhoanDAO();
        //lấy ra thông tin tìm kiếm
        TaiKhoan ls = new TaiKhoan();
        ls.setUsername(txtTimKiem.getText());
        ls.setHoVaTen(txtTimKiem.getText());

        List<TaiKhoan> taiKhoanList = taiKhoanDAO.search(ls);
        for (TaiKhoan taiKhoan : taiKhoanList) {
            Vector vector = new Vector();
            vector.add(taiKhoan.getUsername());
            vector.add(taiKhoan.getPassword());
            vector.add(taiKhoan.getHoVaTen());
            vector.add(taiKhoan.getMaQuyen());
            
            //tạo hàng
            tableModel.addRow(vector);
        }
        //đưa dữ liệu từ model vào bảng
        tblTaiKhoan.setModel(tableModel);
        tblTaiKhoan.getColumnModel().getColumn(1).setCellRenderer(new PasswordCellRenderer());
        tblTaiKhoan.getColumnModel().getColumn(2).setPreferredWidth(200);
        btnSua.setEnabled(true);
        btnXoa.setEnabled(true);
    }//GEN-LAST:event_btnTimKiemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAccountManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAccountManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAccountManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAccountManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmAccountManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnResetBang;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaTrang;
    private javax.swing.JComboBox<String> cbbQuyen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTaiKhoan;
    private javax.swing.JTextField txtHoVaTen;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void loadDuLieuLenLuoi() {
        tableModel = new DefaultTableModel();
        //tạo cột
        tableModel.addColumn("Username");
        tableModel.addColumn("Password");
        tableModel.addColumn("Họ và tên");
        tableModel.addColumn("Mã quyền");
        
        

        TaiKhoanDAO taiKhoanDAO = new TaiKhoanDAO();
        //lấy ra toàn bộ vai trò
        List<TaiKhoan> taiKhoanList = taiKhoanDAO.selectAll();
        for (TaiKhoan taiKhoan : taiKhoanList) {
            Vector vector = new Vector();
            vector.add(taiKhoan.getUsername());
            vector.add(taiKhoan.getPassword());
            vector.add(taiKhoan.getHoVaTen());
            vector.add(taiKhoan.getMaQuyen());

            //tạo hàng
            tableModel.addRow(vector);
        }
        //đưa dữ liệu từ model vào bảng
        tblTaiKhoan.setModel(tableModel);
        tblTaiKhoan.getColumnModel().getColumn(1).setCellRenderer(new PasswordCellRenderer());
        tblTaiKhoan.getColumnModel().getColumn(2).setPreferredWidth(200);
        btnSua.setEnabled(true);
        btnXoa.setEnabled(true);
    }

    private void loadDuLieuLenCombobox() {
        QuyenDAO quyenDAO = new QuyenDAO();
        //lấy toàn bộ bảng vai trò
        List<Quyen> quyenList = quyenDAO.selectAll();
        Vector v = new Vector(quyenList);
        //khởi tạo dữ liệu cho combobox
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(v);
        cbbQuyen.setModel(dcbm);
        //giúp tạo combobox hiển thị tên vai trò
        cbbQuyen.setRenderer(new ListCellRenderer() {
            DefaultListCellRenderer dlcr = new DefaultListCellRenderer();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                // gọi method giống hệt method cần viết, truyền vào tham số y như nguyên
                JLabel label = (JLabel) dlcr.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value != null) {
                    label.setText(((Quyen) value).getChucVu());
                }
                return label;
            }
        });
    }

    private void xoaTrang() {
        txtHoVaTen.setText("");
        txtPassword.setText("");
        txtTimKiem.setText("");
        txtUsername.setText("");
        loadDuLieuLenCombobox();
    }
}
