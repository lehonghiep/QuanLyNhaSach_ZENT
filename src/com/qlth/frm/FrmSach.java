/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.qlth.frm;

import com.qlth.dao.AnhBiaSachDAO;
import com.qlth.dao.KhoDAO;
import com.qlth.dao.LinhVucDAO;
import com.qlth.dao.LoaiSachDAO;
import com.qlth.dao.NhaXuatBanDAO;
import com.qlth.dao.SachDAO;
import com.qlth.dao.TacGiaDAO;
import com.qlth.obj.AnhBiaSach;
import com.qlth.obj.Kho;
import com.qlth.obj.LinhVuc;
import com.qlth.obj.LoaiSach;
import com.qlth.obj.NhaXuatBan;
import com.qlth.obj.Sach;
import com.qlth.obj.TacGia;
import com.qlth.util.Convert;
import com.qlth.util.Report;
import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.OutputStreamWriter;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.OK_CANCEL_OPTION;
import javax.swing.ListCellRenderer;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hong Hiep
 */
public class FrmSach extends javax.swing.JFrame {

    DefaultTableModel tableModel = new DefaultTableModel();

    /**
     * Creates new form FrmSach
     */
    public FrmSach() {
        initComponents();
        loadDuLieuLenLuoi();
        loadComboBox();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSach = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXoaTrang = new javax.swing.JButton();
        btnResetBang = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtMaSach = new javax.swing.JTextField();
        txtTenSach = new javax.swing.JTextField();
        cbbTacGia = new javax.swing.JComboBox<>();
        cbbLoaiSach = new javax.swing.JComboBox<>();
        cbbLinhVuc = new javax.swing.JComboBox<>();
        cbbNhaXuatBan = new javax.swing.JComboBox<>();
        txtGia = new javax.swing.JTextField();
        txtGiaNhap = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        lblBiaSach = new javax.swing.JLabel();
        btnChinhSuaHinhAnh = new javax.swing.JButton();
        btnXuatExcel = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh mục sách"));
        jPanel1.setLayout(new java.awt.GridLayout(1, 1));

        tblSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSach);

        jPanel1.add(jScrollPane1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Chức năng"));
        jPanel4.setLayout(new java.awt.GridLayout(5, 1));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/20.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel4.add(btnThem);

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/22.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel4.add(btnSua);

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/24.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel4.add(btnXoa);

        btnXoaTrang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/23.png"))); // NOI18N
        btnXoaTrang.setText("Xóa trắng");
        btnXoaTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTrangActionPerformed(evt);
            }
        });
        jPanel4.add(btnXoaTrang);

        btnResetBang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/27.png"))); // NOI18N
        btnResetBang.setText("Reset bảng");
        btnResetBang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetBangActionPerformed(evt);
            }
        });
        jPanel4.add(btnResetBang);

        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/26.png"))); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin"));

        jPanel3.setLayout(new java.awt.GridLayout(8, 1));

        jLabel1.setText("Mã sách");
        jPanel3.add(jLabel1);

        jLabel2.setText("Tên sách");
        jPanel3.add(jLabel2);

        jLabel3.setText("Tác giả");
        jPanel3.add(jLabel3);

        jLabel4.setText("Loại sách");
        jPanel3.add(jLabel4);

        jLabel5.setText("Lĩnh vực");
        jPanel3.add(jLabel5);

        jLabel7.setText("Nhà xuất bản");
        jPanel3.add(jLabel7);

        jLabel6.setText("Giá");
        jPanel3.add(jLabel6);

        jLabel8.setText("Giá Nhập");
        jPanel3.add(jLabel8);

        jPanel2.setLayout(new java.awt.GridLayout(8, 1));
        jPanel2.add(txtMaSach);
        jPanel2.add(txtTenSach);

        cbbTacGia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(cbbTacGia);

        cbbLoaiSach.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(cbbLoaiSach);

        cbbLinhVuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(cbbLinhVuc);

        cbbNhaXuatBan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(cbbNhaXuatBan);
        jPanel2.add(txtGia);
        jPanel2.add(txtGiaNhap);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Bìa sách"));
        jPanel6.setLayout(new java.awt.GridLayout(1, 1));
        jPanel6.add(lblBiaSach);

        btnChinhSuaHinhAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/31.png"))); // NOI18N
        btnChinhSuaHinhAnh.setText("Chỉnh sửa ảnh");
        btnChinhSuaHinhAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChinhSuaHinhAnhActionPerformed(evt);
            }
        });

        btnXuatExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/qlth/img/34.png"))); // NOI18N
        btnXuatExcel.setText("Xuất excel");
        btnXuatExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatExcelActionPerformed(evt);
            }
        });

        jLabel9.setText("(*)Tìm kiếm theo mã sách và tên sách");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 952, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXuatExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(btnTimKiem))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnChinhSuaHinhAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnChinhSuaHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnXuatExcel))
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
//kiêm tra các thông tin bắt buộc nhập là quyền và tên vai trò

        if (txtMaSach.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập mã sách");
            return;
        }
        if (txtTenSach.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập tên sách");
            return;
        }

        if (cbbTacGia.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Chưa chọn tác giả");
            return;
        }
        if (cbbLoaiSach.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Chưa chọn loại sách");
            return;
        }
        if (cbbLinhVuc.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Chưa chọn lĩnh vực");
            return;
        }
        if (cbbNhaXuatBan.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Chưa chọn nhà xuất bản");
            return;
        }
        if (txtGia.getText().isEmpty() || txtGiaNhap.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập giá");
            return;
        } else {
            Integer gia;
            Integer giaNhap;
            try {
                gia = Integer.parseInt(txtGia.getText());
                giaNhap = Integer.parseInt(txtGiaNhap.getText());
                if (gia < 0 || giaNhap < 0 || gia < giaNhap) {
                    JOptionPane.showMessageDialog(this, "Giá nhập không hợp lệ");
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Giá nhập không hợp lệ");
                return;
            }

        }

        SachDAO sachDAO = new SachDAO();
        //lấy giá trị nhập trên form truyền vào đôi tượng
        Sach s = new Sach();
        s.setMaSach(Convert.convertID(txtMaSach.getText()));
        s.setTenSach(Convert.convertName(txtTenSach.getText()));

        s.setMaTacGia(((TacGia) cbbTacGia.getSelectedItem()).getMaTacGia());
        s.setMaLoaiSach(((LoaiSach) cbbLoaiSach.getSelectedItem()).getMaLoaiSach());
        s.setMaLinhVuc(((LinhVuc) cbbLinhVuc.getSelectedItem()).getMaLinhVuc());
        s.setMaNhaXuatBan(((NhaXuatBan) cbbNhaXuatBan.getSelectedItem()).getMaNhaXuatBan());
        s.setGiaMua(Integer.parseInt(txtGia.getText()));
        s.setGiaNhap(Integer.parseInt(txtGiaNhap.getText()));
        //thực hiện thêm vào DB
        boolean result = sachDAO.insert(s);

        KhoDAO khoDAO = new KhoDAO();
        Kho kho = new Kho(Convert.convertID(txtMaSach.getText()), 0);
        khoDAO.insert(kho);

        AnhBiaSachDAO anhBiaSachDAO = new AnhBiaSachDAO();
        AnhBiaSach anhBiaSach = new AnhBiaSach();
        anhBiaSach.setMaSach(Convert.convertID(txtMaSach.getText()));
        anhBiaSach.setPathAnh(null);

        anhBiaSachDAO.insert(anhBiaSach);

        //reset form
        xoaTrang();
        //load lại dữ liệu lên lưới
        loadDuLieuLenLuoi();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnResetBangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetBangActionPerformed
        // TODO add your handling code here:
        loadDuLieuLenLuoi();
    }//GEN-LAST:event_btnResetBangActionPerformed

    private void btnXoaTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTrangActionPerformed
        // TODO add your handling code here:
        xoaTrang();
    }//GEN-LAST:event_btnXoaTrangActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        //kiêm tra các thông tin bắt buộc nhập là quyền và tên vai trò
        int row = tblSach.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn mục muốn sửa");
            return;
        }
        if (txtMaSach.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập mã sách");
            return;
        }
        if (txtTenSach.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập tên sách");
            return;
        }

        if (cbbTacGia.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Chưa chọn tác giả");
            return;
        }
        if (cbbLoaiSach.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Chưa chọn loại sách");
            return;
        }
        if (cbbLinhVuc.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Chưa chọn lĩnh vực");
            return;
        }
        if (cbbNhaXuatBan.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Chưa chọn nhà xuất bản");
            return;
        }
        if (txtGia.getText().isEmpty() || txtGiaNhap.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập giá");
            return;
        } else {
            Integer gia;
            Integer giaNhap;
            try {
                gia = Integer.parseInt(txtGia.getText());
                giaNhap = Integer.parseInt(txtGiaNhap.getText());
                if (gia < 0 || giaNhap < 0 || gia < giaNhap) {
                    JOptionPane.showMessageDialog(this, "Giá nhập không hợp lệ");
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Giá nhập không hợp lệ");
                return;
            }

        }

        KhoDAO khoDAO = new KhoDAO();
        Kho kho = khoDAO.getImageById((String) tblSach.getValueAt(row, 0));

        Kho kho1 = new Kho((String) tblSach.getValueAt(row, 0));
        khoDAO.delete(kho1);

        SachDAO sachDAO = new SachDAO();
        //lấy giá trị nhập trên form truyền vào đôi tượng
        Sach s = new Sach();
        s.setMaSachUpdate(Convert.convertID(txtMaSach.getText()));
        s.setTenSach(Convert.convertName(txtTenSach.getText()));

        s.setMaTacGia(((TacGia) cbbTacGia.getSelectedItem()).getMaTacGia());
        s.setMaLoaiSach(((LoaiSach) cbbLoaiSach.getSelectedItem()).getMaLoaiSach());
        s.setMaLinhVuc(((LinhVuc) cbbLinhVuc.getSelectedItem()).getMaLinhVuc());
        s.setMaNhaXuatBan(((NhaXuatBan) cbbNhaXuatBan.getSelectedItem()).getMaNhaXuatBan());
        s.setGiaMua(Integer.parseInt(txtGia.getText()));
        s.setGiaNhap(Integer.parseInt(txtGiaNhap.getText()));
        s.setMaSach((String) tblSach.getValueAt(row, 0));
        //thực hiện thêm vào DB
        boolean result = sachDAO.update(s);

        Kho kho2 = new Kho(Convert.convertID(txtMaSach.getText()), kho.getSoLuong());
        khoDAO.insert(kho2);

        AnhBiaSachDAO anhBiaSachDAO = new AnhBiaSachDAO();
        AnhBiaSach anhBiaSach = new AnhBiaSach();
        anhBiaSach.setMaSachUpdate(Convert.convertID(txtMaSach.getText()));
        anhBiaSach.setMaSach((String) tblSach.getValueAt(row, 0));

        anhBiaSachDAO.update1(anhBiaSach);
        //reset form
        xoaTrang();
        //load lại dữ liệu lên lưới
        loadDuLieuLenLuoi();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void tblSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSachMouseClicked
        // TODO add your handling code here:
//lấy ra dòng được click trên table
        int row = tblSach.getSelectedRow();
        //lấy giá trị trên dòng được chọn cột thứ 0
        String maSach = (String) tblSach.getValueAt(row, 0);
        //lấy giá trị trên dòng được chọn cột thứ 1
        String tenSach = (String) tblSach.getValueAt(row, 1);
        //lấy giá trị trên dòng được chọn cột thứ 2
        String maTacGia = (String) tblSach.getValueAt(row, 2);
        //lấy giá trị trên dòng được chọn cột thứ 3
        String maLoaiSach = (String) tblSach.getValueAt(row, 3);
        //lấy giá trị trên dòng được chọn cột thứ 5
        String maLinhVuc = (String) tblSach.getValueAt(row, 4);
        //lấy giá trị trên dòng được chọn cột thứ 5
        String maNhaXuatBan = (String) tblSach.getValueAt(row, 5);
        //set giá trị lấy được trả lại cho text field
        Integer gia = Integer.parseInt(tblSach.getValueAt(row, 6).toString());
        //lấy giá trị trên dòng được chọn cột thứ 5
        Integer giaNhap = Integer.parseInt(tblSach.getValueAt(row, 7).toString());
        //lấy giá trị trên dòng được chọn cột thứ 5
        txtMaSach.setText(maSach);
        txtTenSach.setText(tenSach);

        TacGiaDAO tacGiaDAO = new TacGiaDAO();
        cbbTacGia.setSelectedItem(tacGiaDAO.getTacGiaById(maTacGia));
        LoaiSachDAO loaiSachDAO = new LoaiSachDAO();
        cbbLoaiSach.setSelectedItem(loaiSachDAO.getLoaiSachById(maLoaiSach));
        LinhVucDAO linhVucDAO = new LinhVucDAO();
        cbbLinhVuc.setSelectedItem(linhVucDAO.getLinhVucById(maLinhVuc));
        NhaXuatBanDAO nhaXuatBanDAO = new NhaXuatBanDAO();
        cbbNhaXuatBan.setSelectedItem(nhaXuatBanDAO.getNhaXuatBanById(maNhaXuatBan));

        txtGia.setText(gia.toString());
        txtGiaNhap.setText(giaNhap.toString());

        AnhBiaSachDAO anhBiaSachDao = new AnhBiaSachDAO();
        String path = anhBiaSachDao.getImageById(maSach).getPathAnh();
//        lblBiaSach.setIcon(new ImageIcon(path!=null?path:""));
        if (path != null) {
            try {
                lblBiaSach.setIcon(Convert.load(path, lblBiaSach.getSize().width, lblBiaSach.getSize().height));
            } catch (Exception e) {
                lblBiaSach.setIcon(new ImageIcon(""));
            }

        } else {
            lblBiaSach.setIcon(new ImageIcon(""));
        }
    }//GEN-LAST:event_tblSachMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int row = tblSach.getSelectedRow();
        if (row >= 0) {
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?", "Thông báo", OK_CANCEL_OPTION);
            //Nếu chọn Yes
            if (confirm == JOptionPane.YES_OPTION) {
                //Lấy dòng được chọn

                //Lấy giá trị dòng được lấy cột đầu tiên => mã nhân viên
                String maSach = (String) tblSach.getValueAt(row, 0);

                KhoDAO khoDAO = new KhoDAO();
                Kho kho = new Kho(maSach);
                khoDAO.delete(kho);

                SachDAO sachDAO = new SachDAO();
                Sach sach = new Sach(maSach);
                //thực hiện xóa vai trò
                boolean result = sachDAO.delete(sach);
                //thông báo
                AnhBiaSachDAO anhBiaSachDAO = new AnhBiaSachDAO();
                AnhBiaSach anhBiaSach = new AnhBiaSach(maSach);
                anhBiaSachDAO.delete(anhBiaSach);
                //reset lại form nhập
                xoaTrang();
                //load lại dữ liệu lên lưới
                loadDuLieuLenLuoi();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn chựa chọn mục muốn xóa");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        tableModel = new DefaultTableModel();
        //tạo cột
        tableModel.addColumn("Mã sách");
        tableModel.addColumn("Tên sách");
        tableModel.addColumn("Mã tác giả");
        tableModel.addColumn("Mã loại sách");
        tableModel.addColumn("Mã lĩnh vực");
        tableModel.addColumn("Mã nhà xuất bản");
        tableModel.addColumn("Giá mua");
        tableModel.addColumn("Giá nhập");

        SachDAO sachDAO = new SachDAO();
        //lấy ra thông tin tìm kiếm
        Sach kh = new Sach();
        kh.setMaSach(txtTimKiem.getText());
        kh.setTenSach(txtTimKiem.getText());
//        NhomKhachHang nhomKhachHang = (NhomKhachHang)cbbNhomKhachHang.getSelectedItem();
//        kh.setMaNhomKhachHang(nhomKhachHang!=null? nhomKhachHang.getMaNhomKhachHang():null);
        List<Sach> sachList = sachDAO.search(kh);
        for (Sach sach : sachList) {
            Vector vector = new Vector();
            vector.add(sach.getMaSach());
            vector.add(sach.getTenSach());
            vector.add(sach.getMaTacGia());
            vector.add(sach.getMaLoaiSach());
            vector.add(sach.getMaLinhVuc());
            vector.add(sach.getMaNhaXuatBan());
            vector.add(sach.getGiaMua());
            vector.add(sach.getGiaNhap());
            //tạo hàng
            tableModel.addRow(vector);
        }
        //đưa dữ liệu từ model vào bảng
        tblSach.setModel(tableModel);
        tblSach.getColumnModel().getColumn(1).setPreferredWidth(300);
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnChinhSuaHinhAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChinhSuaHinhAnhActionPerformed
        // TODO add your handling code here:
        int row = tblSach.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn sách");
            return;
        }
        String maSach = (String) tblSach.getValueAt(row, 0);

        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter loc = new FileNameExtensionFilter("Images", "png", "jpg");
        chooser.setFileFilter(loc);

        int i = chooser.showOpenDialog(this);
        if (i == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            String fileName = file.getAbsolutePath();

            try {
//                BufferedImage bimage = ImageIO.read(file);
//                
//                ImageIcon icon=new ImageIcon(bimage);
                AnhBiaSachDAO anhBiaSachDao = new AnhBiaSachDAO();
                AnhBiaSach anhBiaSach = new AnhBiaSach();
                anhBiaSach.setPathAnh(fileName);
                anhBiaSach.setMaSach(maSach);
                anhBiaSachDao.update2(anhBiaSach);

//                lblBiaSach.setIcon(Convert.load(fileName, bimage.getWidth(), bimage.getHeight()));
//                lblBiaSach.setIcon(new ImageIcon(fileName));
                lblBiaSach.setIcon(Convert.load(fileName, lblBiaSach.getSize().width, lblBiaSach.getSize().height));
            } catch (Exception e) {
            }

        }
    }//GEN-LAST:event_btnChinhSuaHinhAnhActionPerformed

    private void btnXuatExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatExcelActionPerformed

        Report report = new Report();
        report.xuatExcel(tableModel, this);
    }//GEN-LAST:event_btnXuatExcelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmSach().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChinhSuaHinhAnh;
    private javax.swing.JButton btnResetBang;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaTrang;
    private javax.swing.JButton btnXuatExcel;
    private javax.swing.JComboBox<String> cbbLinhVuc;
    private javax.swing.JComboBox<String> cbbLoaiSach;
    private javax.swing.JComboBox<String> cbbNhaXuatBan;
    private javax.swing.JComboBox<String> cbbTacGia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBiaSach;
    private javax.swing.JTable tblSach;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtGiaNhap;
    private javax.swing.JTextField txtMaSach;
    private javax.swing.JTextField txtTenSach;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void loadDuLieuLenLuoi() {
        tableModel = new DefaultTableModel();
        //tạo cột
        tableModel.addColumn("Mã sách");
        tableModel.addColumn("Tên sách");
        tableModel.addColumn("Mã tác giả");
        tableModel.addColumn("Mã loại sách");
        tableModel.addColumn("Mã lĩnh vực");
        tableModel.addColumn("Mã nhà xuất bản");
        tableModel.addColumn("Giá mua");
        tableModel.addColumn("Giá nhập");

        SachDAO sachDAO = new SachDAO();
        //lấy ra toàn bộ vai trò
        List<Sach> sachList = sachDAO.selectAll();
        for (Sach sach : sachList) {
            Vector vector = new Vector();
            vector.add(sach.getMaSach());
            vector.add(sach.getTenSach());
            vector.add(sach.getMaTacGia());
            vector.add(sach.getMaLoaiSach());
            vector.add(sach.getMaLinhVuc());
            vector.add(sach.getMaNhaXuatBan());
            vector.add(sach.getGiaMua());
            vector.add(sach.getGiaNhap());

            //tạo hàng
            tableModel.addRow(vector);
        }
        //đưa dữ liệu từ model vào bảng
        tblSach.setModel(tableModel);
        tblSach.getColumnModel().getColumn(1).setPreferredWidth(300);
    }

    private void loadComboBox() {
        TacGiaDAO tacGiaDAO = new TacGiaDAO();
        //lấy toàn bộ bảng vai trò
        List<TacGia> tacGiaList = tacGiaDAO.selectAll();
        Vector v = new Vector(tacGiaList);
        //khởi tạo dữ liệu cho combobox
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(v);
        cbbTacGia.setModel(dcbm);
        //giúp tạo combobox hiển thị tên vai trò
        cbbTacGia.setRenderer(new ListCellRenderer() {
            DefaultListCellRenderer dlcr = new DefaultListCellRenderer();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                // gọi method giống hệt method cần viết, truyền vào tham số y như nguyên
                JLabel label = (JLabel) dlcr.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value != null) {
                    label.setText(((TacGia) value).getTenTacGia());
                }
                return label;
            }
        });
        LoaiSachDAO loaiSachDAO = new LoaiSachDAO();
        //lấy toàn bộ bảng vai trò
        List<LoaiSach> loaiSachList = loaiSachDAO.selectAll();
        Vector v1 = new Vector(loaiSachList);
        //khởi tạo dữ liệu cho combobox
        DefaultComboBoxModel dcbm1 = new DefaultComboBoxModel(v1);
        cbbLoaiSach.setModel(dcbm1);
        //giúp tạo combobox hiển thị tên vai trò
        cbbLoaiSach.setRenderer(new ListCellRenderer() {
            DefaultListCellRenderer dlcr = new DefaultListCellRenderer();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                // gọi method giống hệt method cần viết, truyền vào tham số y như nguyên
                JLabel label = (JLabel) dlcr.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value != null) {
                    label.setText(((LoaiSach) value).getTenLoaiSach());
                }
                return label;
            }
        });
        LinhVucDAO linhVucDAO = new LinhVucDAO();
        //lấy toàn bộ bảng vai trò
        List<LinhVuc> linhVucList = linhVucDAO.selectAll();
        Vector v2 = new Vector(linhVucList);
        //khởi tạo dữ liệu cho combobox
        DefaultComboBoxModel dcbm2 = new DefaultComboBoxModel(v2);
        cbbLinhVuc.setModel(dcbm2);
        //giúp tạo combobox hiển thị tên vai trò
        cbbLinhVuc.setRenderer(new ListCellRenderer() {
            DefaultListCellRenderer dlcr = new DefaultListCellRenderer();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                // gọi method giống hệt method cần viết, truyền vào tham số y như nguyên
                JLabel label = (JLabel) dlcr.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value != null) {
                    label.setText(((LinhVuc) value).getTenLinhVuc());
                }
                return label;
            }
        });
        NhaXuatBanDAO nhaXuatBanDAO = new NhaXuatBanDAO();
        //lấy toàn bộ bảng vai trò
        List<NhaXuatBan> nhaXuatBanList = nhaXuatBanDAO.selectAll();
        Vector v3 = new Vector(nhaXuatBanList);
        //khởi tạo dữ liệu cho combobox
        DefaultComboBoxModel dcbm3 = new DefaultComboBoxModel(v3);
        cbbNhaXuatBan.setModel(dcbm3);
        //giúp tạo combobox hiển thị tên vai trò
        cbbNhaXuatBan.setRenderer(new ListCellRenderer() {
            DefaultListCellRenderer dlcr = new DefaultListCellRenderer();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                // gọi method giống hệt method cần viết, truyền vào tham số y như nguyên
                JLabel label = (JLabel) dlcr.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value != null) {
                    label.setText(((NhaXuatBan) value).getTenNhaXuatBan());
                }
                return label;
            }
        });
    }

    private void xoaTrang() {
        txtGia.setText("");
        txtMaSach.setText("");
        txtTenSach.setText("");
        txtTimKiem.setText("");
        txtGiaNhap.setText("");
        loadComboBox();
    }
}
